{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Owner.jsx","components/Header.jsx","components/State.jsx","components/Welcome.jsx","components/ChangeState.jsx","components/AddVoters/Title.jsx","components/AddVoters/Cta.jsx","components/AddVoters/BtnAddVoter.jsx","components/AddVoters/Desc.jsx","components/AddVoters/index.jsx","components/Proposals/SetProposals.jsx","components/Proposals/index.jsx","components/Proposals/ProposalsArray.jsx","components/GetVoters/GetVoters.jsx","components/GetVoters/index.jsx","components/Vote/SetVote.jsx","components/Vote/index.jsx","components/TallyVotes.jsx","components/Winner.jsx","components/NoticeNoArtifact.jsx","components/NoticeWrongNetwork.jsx","components/Param.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","IsOwner","setOwner","methods","owner","call","addr","setTheOwner","MyAddress","addrOwner","className","id","WichState","nextState","useState","readState","workflowStatus","from","options","fromBlock","WorkflowStatusChange","event","returnValues","theState","Welcome","ChangeState","changeState","send","onClick","Title","Cta","BtnAddVoter","inputTextValue","setInputTextValue","length","addVoter","alert","onChange","target","Desc","Demo","currentState","Setproposal","addProposal","SetTheProposals","ProposalsArray","propoID","setPropId","toBlock","getPastEvents","listProposals","tableau","map","propo","proposalId","description","GetVoter","Voter","readaddr","inaddr","setaddr","getVoter","voter","SetTheVoters","SetVote","inputVote","setTheVote","setVote","SetTheVote","TallyVotes","tallyVotes","GetWinner","readProposal","winningProposalID","winner","log","getOneProposal","proposal","NoticeNoArtifact","NoticeWrongNetwork","Param","Params","App","AddVoters","Vote","Proposals","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.053c0692.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import useEth from \"../contexts/EthContext/useEth\";\nimport { useEffect } from \"react\";\n\nfunction IsOwner({ setOwner }) {\n    const { state: { contract } } = useEth();\n\n    useEffect(() => {\n        if (contract) {\n            setTheOwner();\n        }\n    })\n\n    async function setTheOwner() {\n        const addr = await contract.methods.owner().call();\n        setOwner(addr);\n    }\n}\n\nexport default IsOwner;","import useEth from \"../contexts/EthContext/useEth\";\nimport \"./CSS.css\";\n\nfunction MyAddress({ addrOwner }) {\n    const { state: { contract, accounts } } = useEth();\n\n    if (contract) {\n        if (addrOwner === accounts[0]) {\n            return (\n                <div className=\"param\">\n                    <span className=\"addr\">{addrOwner}</span>\n                    <p id=\"para1\">Your are the admin of this voting session !</p>\n                    <hr />\n                </div>\n\n\n            );\n        }\n        else {\n            return (\n            <div className=\"param\">\n                <span className=\"addr\">{addrOwner}</span>\n                <p id=\"para1\">You are not the admin.</p>\n                <hr />\n            </div>\n            );\n        }\n    }\n}\n\nexport default MyAddress;","import useEth from \"../contexts/EthContext/useEth\";\nimport { useEffect, useState } from \"react\";\n\nfunction WichState({ nextState }) {\n    const { state: { contract, accounts } } = useEth();\n    const [value, readState] = useState(\"\");\n    let workflowStatus = ['Admin is registering voters', 'Proposals registration started', 'Proposals registration ended', 'Voting session started', 'Voting session ended', 'Votes tallied'];\n\n    useEffect(() => {\n        if (contract) {\n            theState();\n            event();\n        }\n    });\n\n    async function theState() {\n        const data = await contract.methods.workflowStatus().call({ from: accounts[0] });\n        readState(workflowStatus[data]);\n        nextState(data);\n\n    }\n\n    async function event() {\n\n        // const dataState = await contract.getPastEvents('WorkflowStatusChange', options)\n        // nextState(dataState[0].returnValues.newStatus);\n        // console.log(dataState[0].returnValues.newStatus);\n        let options = {\n            fromBlock: 'latest'\n        };\n        contract.events.WorkflowStatusChange(options)\n            .on('data', event => nextState(event.returnValues[1]))\n    }\n\n    return (\n        <div className=\"state\">\n            <h2>Status of the voting session</h2>\n            <p>{value}</p>\n            <hr />\n        </div>\n\n    );\n}\n\nexport default WichState;","function Welcome() {\n  return (\n    <div className=\"welcome\">\n      <h1>Welcome on our voting platform !</h1>\n      <p>\n      We have built our application on the blockchain so that our system is very secure !\n      </p>\n      <hr />\n    </div>\n  );\n}\n\nexport default Welcome;","import useEth from \"../contexts/EthContext/useEth\";\n\nfunction ChangeState({ addrOwner, nextState }) {\n    const { state: { contract, accounts } } = useEth();\n\n    async function newState() {\n        await contract.methods.changeState().send({ from: accounts[0] }); \n        // const data = await contract.methods.workflowStatus().call({ from: accounts[0] });\n    };\n\n    if (contract) {\n        if (addrOwner === accounts[0]) {\n            return (\n                <div>\n                    \n                    <button onClick={newState}>ChangeState</button>\n                    <hr />\n                </div>\n            );\n        }\n    }\n}\n\nexport default ChangeState;","function Title() {\n  return <h2>Registering voters</h2>;\n}\n\nexport default Title;\n","function Cta() {\n  return (\n    <p>\n      You can register voters !\n    </p>\n  );\n}\n\nexport default Cta;\n","import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction BtnAddVoter() {\n  const { state: { contract, accounts } } = useEth();\n  const [inputTextValue, setInputTextValue] = useState(\"\");\n\n  async function addVoter() {\n    if (inputTextValue.length === 42) {\n      await contract.methods.addVoter(inputTextValue).send({ from: accounts[0] });\n    }\n    else { window.alert(\"This isn't an adress !\") };\n\n  };\n\n  function handleInputText(e) {\n    setInputTextValue(e.target.value);\n  }\n\n  return (\n    <div>\n      <button onClick={addVoter}>AddVoter</button>\n      <input type='text' onChange={handleInputText} />\n    </div>\n  );\n}\n\nexport default BtnAddVoter;\n","function Desc() {\n  return (\n    <>\n      <p>\n      Please enter the voter's address for the registration.\n      </p>\n    </>\n  );\n}\n\nexport default Desc;\n","import useEth from \"../../contexts/EthContext/useEth\";\nimport Title from \"./Title\";\nimport Cta from \"./Cta\";\nimport BtnAddVoter from \"./BtnAddVoter\";\nimport Desc from \"./Desc\";\n\n\nfunction Demo({ currentState, addrOwner }) {\n  const { state: { contract, accounts } } = useEth();\n\n  if (contract) {\n    // eslint-disable-next-line\n    if ((addrOwner === accounts[0]) && (currentState == 0)) {\n      return (\n        <div className=\"addvoter\">\n          \n          <Title />\n          <Cta />\n          <div >\n            <BtnAddVoter />\n          </div>\n          <Desc />\n          <hr />\n        </div>\n      );\n    };\n  };\n}\n\nexport default Demo;\n","import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction Setproposal() {\n    const { state: { contract, accounts } } = useEth();\n    const [inputTextValue, setInputTextValue] = useState(\"\");\n\n    // useEffect(() => {\n    //     if (contract) {\n    //         tableau()\n    //     }\n    // });\n\n    // async function event() {\n    //     let options = {\n    //         fromBlock: 0,                  //Number || \"earliest\" || \"pending\" || \"latest\"\n    //         toBlock: 'latest'\n    //     };\n    //     const listProposals = await contract.getPastEvents('ProposalRegistered', options);\n    //     const proposal = await contract.methods.getOneProposal(id).call({ from: accounts[0] });\n    //     console.log(listProposals[0].returnValues.proposalId);\n    //     console.log(listProposals.length);\n    //     setId(listProposals[0].returnValues.proposalId);\n\n    // }\n    \n\n    async function addProposal() {\n        if (inputTextValue === \"\") {\n            window.alert(\"You can't add an empty proposal !\");\n        }\n        else {\n            await contract.methods.addProposal(inputTextValue).send({ from: accounts[0] });\n            // const callingProposals = await contract.methods.getOneProposal().call();\n        }\n    };\n\n    function handleInputText(e) {\n        setInputTextValue(e.target.value);\n    }\n\n    return (\n        <div>\n            <button onClick={addProposal}>Add a proposal</button>\n            <input type='text' onChange={handleInputText} />            \n        </div>\n    );\n\n\n}\n\nexport default Setproposal;","import Setproposal from \"./SetProposals\";\n\nfunction SetTheProposals({ currentState }) {\n\n    // eslint-disable-next-line\n    if (currentState == 1) {\n        return (\n            <div>\n                <Setproposal />\n                <hr />\n            </div>\n        );\n    }\n}\n\nexport default SetTheProposals;","import { useEffect, useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction ProposalsArray() {\n    const { state: { contract } } = useEth();\n    const [propoID, setPropId] = useState([]);\n\n    useEffect(() => {\n        if (contract) {\n            tableau()\n            // getPropo()\n        }\n    });\n\n    async function tableau() {\n        let options = {\n            fromBlock: 0,                  //Number || \"earliest\" || \"pending\" || \"latest\"\n            toBlock: 'latest'\n        };\n        const listProposals = await contract.getPastEvents('ProposalRegistered', options);\n        setPropId(listProposals);\n    }\n\n    // eslint-disable-next-line\n    if (!propoID.length == 0) {\n        return (\n            <div className=\"tableau\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Proposals Id</th>\n                            <th>Proposals Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {propoID.map((propo) => (\n                            <tr key={propo.returnValues.proposalId}>\n                                <td>{propo.returnValues.proposalId}</td>\n                                <td>{propo.returnValues.description}</td>\n                                {/* <td>{array[propo]}</td> */}\n                            </tr>\n                        ))}\n\n                    </tbody>\n                </table>\n                <hr />\n            </div>\n        );\n    }\n}\n\n\nexport default ProposalsArray;","import useEth from \"../../contexts/EthContext/useEth\";\nimport { useState } from \"react\";\n// import {BigNumber, Contract, providers,} from 'ethers';\n\nfunction GetVoter() {\n    const { state: { contract, accounts } } = useEth();\n    const [Voter, readaddr] = useState(\"\");\n    const [inaddr, setaddr] = useState(\"\");\n\n    async function getVoter() {\n        const address = await contract.methods.getVoter(inaddr).call({ from: accounts[0] });\n        let voter = [\"not registered\", \"hasn't voted\", address[2]]\n\n        if (address[0]) {\n            voter[0] = 'registered';\n        }\n        if (address[1]) {\n            voter[1] = 'has voted the proposal ' + voter[2];\n        }\n        readaddr(\"This voter is \" + voter[0] + \" and he \" + voter[1]);\n    }\n\n    function getAddr(e) {\n        setaddr(e.target.value);\n    }\n\n    return (\n        <div>\n            <button onClick={getVoter}>See the voter by using is address</button>\n            <input type='text' onChange={getAddr} />\n            <p>{Voter}</p>\n        </div>\n         \n    );\n}\n\nexport default GetVoter;","import GetVoter from \"./GetVoters\";\n\nfunction SetTheVoters() {\n\n    return(\n        <div>\n        \n        <GetVoter />\n        <hr />\n        </div> \n\n    );\n\n}\n\nexport default SetTheVoters;","import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction SetVote() {\n    const { state: { contract, accounts } } = useEth();\n    const [inputVote, setTheVote] = useState(\"\");\n\n    async function vote(){\n        if(inputVote === \"\"){\n            window.alert(\"This isn't a valid proposal !\");\n        }\n        else await contract.methods.setVote(inputVote).send({ from: accounts[0] });\n    }\n\n    function addVote(e) {\n        setTheVote(e.target.value);\n    }\n\n    return(\n        <div>            \n            <button onClick={vote}>VOTE</button>\n            <input type=\"text\" onChange={addVote}/>\n        </div>\n    );\n\n}\n\nexport default SetVote;","import SetVote from \"./SetVote\";\n\nfunction SetTheVote({currentState}) {\n\n    // eslint-disable-next-line\n    if (currentState == 3) {\n        return (\n            <div>\n               \n                <SetVote />\n                <hr />\n            </div>\n        );\n    }\n}\n\nexport default SetTheVote;","import useEth from \"../contexts/EthContext/useEth\";\n\nfunction TallyVotes({ currentState, addrOwner }) {\n    const { state: { contract, accounts } } = useEth();\n\n    async function tallytheVotes() {\n        await contract.methods.tallyVotes().send({ from: accounts[0] });\n    };\n\n    if (contract) {\n        // eslint-disable-next-line\n        if ((addrOwner === accounts[0]) && (currentState == 4)) {\n            return (\n                <div>\n                    <button onClick={tallytheVotes}>Tally the votes !</button>\n                    <hr />\n                </div>\n\n            );\n        }\n    }\n}\n\nexport default TallyVotes;","import useEth from \"../contexts/EthContext/useEth\";\nimport { useState } from \"react\";\n\n\nfunction GetWinner({ currentState }) {\n    const { state: { contract, accounts } } = useEth();\n    const [value, readProposal] = useState(\"\");\n\n    async function winningProposal() {\n        const winner = await contract.methods.winningProposalID().call({ from: accounts[0] });\n        console.log(winner);\n        const proposal = await contract.methods.getOneProposal(winner).call({ from: accounts[0] });\n        readProposal(proposal);\n    };\n\n    // eslint-disable-next-line\n    if (currentState == 5) {\n        return (\n            <div>\n                \n                <h2>La proposition gagnante est</h2>\n                <p>{value[0]}</p>\n                <p>Avec {value[1]} voix</p>\n                <button onClick={winningProposal}>Voir la proposition gagnante</button>\n                <hr />\n            </div>\n        );\n    }\n\n}\n\nexport default GetWinner;","function NoticeNoArtifact() {\n  return (\n    <p>\n      ⚠️ Cannot find <span className=\"code\">Voting</span> contract artifact.\n      Please complete the above preparation first, then restart the react dev server.\n    </p>\n  );\n}\n\nexport default NoticeNoArtifact;\n","function NoticeWrongNetwork() {\n  return (\n    <p>\n      ⚠️ MetaMask is not connected to the good network.\n    </p>\n  );\n}\n\nexport default NoticeWrongNetwork;\n","import useEth from \"../contexts/EthContext/useEth\";\nimport NoticeNoArtifact from \"./NoticeNoArtifact\";\nimport NoticeWrongNetwork from \"./NoticeWrongNetwork\";\nimport \"./CSS.css\";\n\n\nfunction Param() {\n  const { state } = useEth();\n  // const [value, setValue] = useState(\"?\");\n\n  const Params =\n    <>\n      <div className=\"contract-container\">\n        <h3 className=\"network\">You are on the good NetWork of Voting Dapp !</h3>\n      </div>\n    </>;\n\n  return (\n    <div className=\"demo\">\n      {\n        !state.artifact ? <NoticeNoArtifact /> :\n          !state.contract ? <NoticeWrongNetwork /> :\n            Params\n      }\n      <hr />\n    </div>\n  );\n}\n\nexport default Param;\n","import { EthProvider} from \"./contexts/EthContext\";\n// import useEth from \"./contexts/EthContext/useEth\";\nimport IsOwner from \"./components/Owner\";\nimport MyAddress from \"./components/Header\";\nimport WichState from \"./components/State\";\nimport Welcome from \"./components/Welcome\";\nimport ChangeState from \"./components/ChangeState\";\nimport AddVoters from \"./components/AddVoters\";\nimport Proposals from \"./components/Proposals\";\n// import GetProposal from \"./components/GetProposal\";\nimport ProposalsArray from \"./components/Proposals/ProposalsArray\";\nimport GetVoter from \"./components/GetVoters\";\nimport Vote from \"./components/Vote\";\nimport TallyVotes from \"./components/TallyVotes\";\nimport GetWinner from \"./components/Winner\"; \nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Param from \"./components/Param\";\n\nfunction App() {\n  const [currentState, nextState] = useState([]);\n  const [addrOwner, setOwner] = useState([]);\n\n\n  // const myApp = \n  // <>\n  // <div><h2>ça marche</h2></div>\n  // </>\n\n  return (\n      <EthProvider>\n        <div id=\"App\" >\n          <div className=\"container\">\n          <MyAddress addrOwner={addrOwner} />\n          <Welcome />\n          <Param />\n            <IsOwner setOwner={setOwner} />\n            \n            <WichState nextState={nextState}  /> \n            <ChangeState nextState={nextState} addrOwner={addrOwner} />\n            <AddVoters currentState={currentState} addrOwner={addrOwner} />\n            <GetVoter />\n            <TallyVotes currentState={currentState} addrOwner={addrOwner} />\n            <Vote currentState={currentState} />\n            \n            <GetWinner currentState={currentState} />\n            <Proposals currentState={currentState} />\n            {/* <GetProposal currentState={currentState} /> */}\n            <ProposalsArray />\n            \n          </div>\n          {/* <div className=\"demo\">\n      {\n        // !state.artifact ? <NoticeNoArtifact /> :\n        //   !state.contract ? <NoticeWrongNetwork /> :\n          myApp\n      }\n    </div> */}\n        </div>\n      </EthProvider>\n      \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}